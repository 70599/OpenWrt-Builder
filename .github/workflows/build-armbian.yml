name: Build Armbian

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      DEBUG:
        description: 'Interactive debuging'
        required: true
        default: '[no],yes'
      BOARD:
        description: 'Board'
        required: true
        default: '[nanopi-r4s]'
      BRANCH:
        description: 'Branch'
        required: true
        default: '[current],dev,legacy'
      RELEASE:
        description: 'Release'
        required: true
        default: '[bullseye],buster,hirsute,focal'
      BUILD_MINIMAL:
        description: 'Build minimal'
        required: true
        default: '[no],yes'
      FIXED_IMAGE_SIZE:
        description: 'Fixed image size'
        required: true
        default: '1024,[2048],3072,4096'

env:
  BOARD: ${{ github.event.inputs.BOARD }}
  BRANCH: ${{ github.event.inputs.BRANCH }}
  RELEASE: ${{ github.event.inputs.RELEASE }}
  BUILD_MINIMAL: ${{ github.event.inputs.BUILD_MINIMAL }}
  FIXED_IMAGE_SIZE: ${{ github.event.inputs.FIXED_IMAGE_SIZE }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Armbian build script
      uses: actions/checkout@v2
      with:
        repository: armbian/build
        path: build

    - name: Cache rootfs
      id: cache-rootfs
      if: ${{ github.event.inputs.DEBUG }} != 'yes'
      uses: actions/cache@v2.1.6
      with:
        path: build/cache/rootfs
        key: ${{ runner.os }}-${{ github.event.inputs.BOARD }}-${{ github.event.inputs.BRANCH }}-${{ github.event.inputs.RELEASE }}-${{ github.run_id }}

    - name: Build Armbian
      id: build-armbian
      if: ${{ github.event.inputs.DEBUG }} != 'yes'
      run: |
        cd build
        sudo ./compile.sh \
        BOARD=$BOARD \
        BRANCH=$BRANCH \
        RELEASE=$RELEASE \
        BUILD_MINIMAL=$BUILD_MINIMAL \
        BUILD_DESKTOP=no \
        KERNEL_ONLY=no \
        KERNEL_CONFIGURE=no \
        ROOTFS_TYPE=f2fs \
        FIXED_IMAGE_SIZE=$FIXED_IMAGE_SIZE
        echo "::set-output name=status::success"

    - name: Upload output directory
      uses: actions/upload-artifact@main
      if: steps.build-armbian.outputs.status == 'success' && ${{ github.event.inputs.DEBUG }} != 'yes'
      with:
        name: Armbian_Output
        path: build/output

    - name: Send complete notification
      if: ${{ github.event.inputs.DEBUG }} != 'yes'
      run: |
        curl -X POST \
          -H 'Content-Type: application/json' \
          -d '{"chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}", "text": "✅ [${{ github.event.inputs.BOARD }}] Armbian编译完成"}' \
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
